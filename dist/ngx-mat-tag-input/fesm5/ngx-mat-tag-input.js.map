{"version":3,"file":"ngx-mat-tag-input.js","sources":["ng://ngx-mat-tag-input/lib/ngx-mat-tag-input.component.ts","ng://ngx-mat-tag-input/lib/ngx-mat-tag-input.module.ts","ng://ngx-mat-tag-input/public-api.ts","ng://ngx-mat-tag-input/ngx-mat-tag-input.ts"],"sourcesContent":["import {Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ngx-mat-tag-input',\r\n  templateUrl: './ngx-mat-tag-input.component.html',\r\n  styleUrls: ['./ngx-mat-tag-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NgxMatTagInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NgxMatTagInputComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Input() appearance: MatFormFieldAppearance;\r\n  @Input() readonly: boolean;\r\n  @Input() items: any[] = [];\r\n  @Input() placeholder: string;\r\n  @Input() displayBy: string;\r\n  @Input() isLoading: boolean;\r\n  @Input() selectedTags: any[] = [];\r\n\r\n  @Output() reset = new EventEmitter();\r\n  @Output() ngModelChange = new EventEmitter();\r\n  @Output() change = new EventEmitter();\r\n  @Output() focus = new EventEmitter();\r\n  @Output() select = new EventEmitter();\r\n  @Output() touched = new EventEmitter();\r\n\r\n  @ViewChild('tagsInput') tagsInput: ElementRef<HTMLInputElement>;\r\n\r\n  public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  public searchControl = new FormControl();\r\n  public filteredItems: Observable<any[]>;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  get value(): any[] {\r\n    return this.selectedTags;\r\n  }\r\n\r\n  set value(value: any[]) {\r\n    this.selectedTags = value;\r\n    this.onChange(value);\r\n    this._change(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filteredItems = this.searchControl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((tag: any | null) => tag ? this._filter(tag) : this.items.slice()));\r\n  }\r\n\r\n  onChange: any = () => {\r\n  }\r\n\r\n  onTouched: any = () => {\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (obj) {\r\n      this.value = obj;\r\n    }\r\n    if (obj === null) {\r\n      this.value = [];\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.change.emit(fn);\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n    this.touched.emit(fn);\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.searchControl.disable();\r\n  }\r\n\r\n  _modelChange(event): void {\r\n    this.ngModelChange.emit(event)\r\n  }\r\n\r\n  _change(event): void {\r\n    this.change.emit(event);\r\n  }\r\n\r\n  _focus(event): void {\r\n    this.focus.emit(event)\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    if ((value || '').trim()) {\r\n      this.selectedTags.push(value.trim());\r\n    }\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n    this.searchControl.setValue(null);\r\n    this._change(this.selectedTags);\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    const index = this.selectedTags.indexOf(fruit);\r\n    if (index >= 0) {\r\n      this.selectedTags.splice(index, 1);\r\n    }\r\n    this._change(this.selectedTags);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.pushTag(event.option.value);\r\n    this.tagsInput.nativeElement.value = '';\r\n    this.searchControl.setValue(null);\r\n    this.select.emit(event.option.value);\r\n  }\r\n\r\n  clear(): void {\r\n    this.selectedTags = [];\r\n  }\r\n\r\n  pushTag(tag: any): void {\r\n    if (!this.selectedTags.includes(tag)) {\r\n      this.selectedTags.push(tag);\r\n      this._change(this.selectedTags);\r\n    }\r\n  }\r\n\r\n  private _filter(value: any): string[] {\r\n    const filterValue = (this.displayBy && value[this.displayBy] ? value[this.displayBy] : value).toLowerCase();\r\n    if (this.displayBy) {\r\n      return this.items.filter(option => option[this.displayBy].toLowerCase().includes(filterValue));\r\n    } else {\r\n      return this.items.filter(option => option.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\nimport {NgxMatTagInputComponent} from './ngx-mat-tag-input.component';\r\n\r\n@NgModule({\r\n  declarations: [NgxMatTagInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule\r\n  ],\r\n  exports: [NgxMatTagInputComponent]\r\n})\r\nexport class NgxMatTagInputModule {\r\n}\r\n","/*\r\n * Public API Surface of ngx-mat-tag-input\r\n */\r\n\r\n\r\nexport * from './lib/ngx-mat-tag-input.component';\r\nexport * from './lib/ngx-mat-tag-input.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}