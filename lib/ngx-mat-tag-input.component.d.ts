import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';
import { MatChipInputEvent } from '@angular/material/chips';
import { Observable } from 'rxjs';
export declare class NgxMatTagInputComponent implements OnInit, ControlValueAccessor {
    appearance: MatFormFieldAppearance;
    readonly: boolean;
    items: any[];
    placeholder: string;
    displayBy: string;
    isLoading: boolean;
    selectedTags: any[];
    reset: EventEmitter<any>;
    ngModelChange: EventEmitter<any>;
    change: EventEmitter<any>;
    focus: EventEmitter<any>;
    select: EventEmitter<any>;
    touched: EventEmitter<any>;
    tagsInput: ElementRef<HTMLInputElement>;
    separatorKeysCodes: number[];
    searchControl: FormControl;
    filteredItems: Observable<any[]>;
    constructor();
    get value(): any[];
    set value(value: any[]);
    ngOnInit(): void;
    onChange: any;
    onTouched: any;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    _modelChange(event: any): void;
    _change(event: any): void;
    _focus(event: any): void;
    add(event: MatChipInputEvent): void;
    remove(fruit: any): void;
    selected(event: MatAutocompleteSelectedEvent): void;
    clear(): void;
    pushTag(tag: any): void;
    private _filter;
}
